@model WebShopSolution.ViewModels.Catalog.Product.ProductUpdateViewModel

@{
    ViewData["Title"] = "Edit Product";
}

<h2>Edit Product</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <input type="hidden" asp-for="IdProduct" />

    <!-- Product Name -->
    <div class="form-group">
        <label asp-for="ProductName"></label>
        <input asp-for="ProductName" class="form-control" />
        <span asp-validation-for="ProductName" class="text-danger"></span>
    </div>

    <!-- Description -->
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <!-- Checkbox: Has Variants -->
    <div class="form-check mb-3">
        <input class="form-check-input" type="checkbox" asp-for="IsVariantProduct" id="IsVariantCheckbox" />
        <label class="form-check-label" for="IsVariantCheckbox">This product has variants</label>
    </div>

    <!-- Non-variant fields -->
    <div id="nonVariantFields">
        <div class="form-group">
            <label asp-for="BasePrice"></label>
            <input asp-for="BasePrice" class="form-control" />
            <span asp-validation-for="BasePrice" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Quantity"></label>
            <input asp-for="Quantity" class="form-control" />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>
    </div>

    <!-- Variant fields -->
    <div id="variantFields">
        <h4>Product Variants</h4>
        <div id="variantList">
            @for (int i = 0; i < Model.Variants.Count; i++)
            {
                <div class="variant-item border rounded p-2 mb-3">
                    <input type="hidden" name="Variants[@i].Id" value="@Model.Variants[i].Id" />
                    <div class="form-group">
                        <label>SKU</label>
                        <input type="text" name="Variants[@i].Sku" class="form-control" value="@Model.Variants[i].Sku" />
                    </div>

                    <div class="form-group">
                        <label>Price</label>
                        <input type="number" step="0.01" name="Variants[@i].Price" class="form-control" value="@Model.Variants[i].Price" />
                    </div>

                    <div class="form-group">
                        <label>Stock</label>
                        <input type="number" name="Variants[@i].Stock" class="form-control" value="@Model.Variants[i].Stock" />
                    </div>

                    <div class="form-group">
                        <label>Status</label>
                        <select name="Variants[@i].Status" class="form-control">
                            <option value="Active" selected="@(Model.Variants[i].Status == "Active")">Active</option>
                            <option value="Inactive" selected="@(Model.Variants[i].Status == "Inactive")">Inactive</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Attributes</label>
                        <div class="attribute-group">
                            @{
                                var attributes = Model.Variants[i].Attributes ?? new();

                            }

                            @for (int j = 0; j < attributes.Count; j++)
                            {
                                <div class="d-flex mb-2">
                                    <input type="text" name="Variants[@i].AttributeNames[@j]" class="form-control me-2"
                                           value="@attributes[j].AttributeName" placeholder="Attribute Name" />
                                    <input type="text" name="Variants[@i].AttributeValues[@j]" class="form-control me-2"
                                           value="@attributes[j].AttributeValue" placeholder="Attribute Value" />
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeAttribute(this)">×</button>
                                </div>
                            }

                        </div>
                        <button type="button" class="btn btn-secondary btn-sm mt-1" onclick="addAttribute(this)">+ Add Attribute</button>
                    </div>

                    <button type="button" class="btn btn-danger btn-sm mt-2" onclick="removeVariant(this)">× Remove Variant</button>
                </div>
            }
        </div>

        <button type="button" class="btn btn-primary btn-sm mt-2" onclick="addVariant()">+ Add Variant</button>
    </div>

    <!-- Status -->
    <div class="form-group">
        <label asp-for="Status"></label>
        <select asp-for="Status" class="form-control">
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <!-- Category -->
    <div class="form-group">
        <label asp-for="IdCate">Category</label>
        <select asp-for="IdCate" asp-items="ViewBag.Categories" class="form-control">
            <option value="">-- Select Category --</option>
        </select>
        <span asp-validation-for="IdCate" class="text-danger"></span>
    </div>

    <!-- Upload new images -->
    <div class="form-group">
        <label>Upload New Images</label>
        <input type="file" name="Images" multiple class="form-control" />
    </div>

    <!-- Existing images -->
    <div class="form-group">
        <label>Existing Images</label>
        <div id="image-preview" style="display: flex; flex-wrap: wrap; gap: 10px;">
            @foreach (var img in Model.ExistingImages)
            {
                <div style="position: relative;">
                    <img src="@img.ImagePath" width="120" height="120" style="border: 1px solid #ccc;" />
                    <a href="@Url.Action("DeleteImage", "Product", new { id = img.Id })"
                       style="position:absolute;top:0;right:0;background:red;color:white;padding:2px 5px;text-decoration:none;"
                       onclick="return confirm('Are you sure you want to delete this image?');">X</a>
                </div>
            }
        </div>
    </div>

    <!-- Buttons -->
    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function toggleVariantFields() {
            const isChecked = document.getElementById("IsVariantCheckbox").checked;
            document.getElementById("nonVariantFields").style.display = isChecked ? "none" : "block";
            document.getElementById("variantFields").style.display = isChecked ? "block" : "none";
        }

        document.getElementById("IsVariantCheckbox").addEventListener("change", toggleVariantFields);
        toggleVariantFields();

        function removeVariant(btn) {
            const item = btn.closest('.variant-item');
            item.remove();
        }

        function addVariant() {
            const index = document.querySelectorAll('.variant-item').length;
            const container = document.createElement('div');
            container.className = 'variant-item border rounded p-2 mb-3';
            container.innerHTML = `
                <div class="form-group">
                    <label>SKU</label>
                    <input type="text" name="Variants[${index}].Sku" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Price</label>
                    <input type="number" name="Variants[${index}].Price" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Stock</label>
                    <input type="number" name="Variants[${index}].Stock" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Status</label>
                    <select name="Variants[${index}].Status" class="form-control">
                        <option value="Active">Active</option>
                        <option value="Inactive">Inactive</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Attributes</label>
                    <div class="attribute-group"></div>
                    <button type="button" class="btn btn-secondary btn-sm mt-1" onclick="addAttribute(this)">+ Add Attribute</button>
                </div>
                <button type="button" class="btn btn-danger btn-sm mt-2" onclick="removeVariant(this)">× Remove Variant</button>
            `;
            document.getElementById('variantList').appendChild(container);
        }

        function addAttribute(btn) {
            const group = btn.previousElementSibling;
            const variantItem = btn.closest('.variant-item');
            const nameInput = variantItem.querySelector('input[name^="Variants["]');
            const match = nameInput.name.match(/Variants\[(\d+)\]/);
            const variantIndex = match ? match[1] : '0';
            const attrCount = group.querySelectorAll('input[name*="AttributeNames"]').length;

            const div = document.createElement('div');
            div.className = 'd-flex mb-2';
            div.innerHTML = `
                <input type="text" name="Variants[${variantIndex}].AttributeNames[${attrCount}]" class="form-control me-2" placeholder="Attribute Name" />
                <input type="text" name="Variants[${variantIndex}].AttributeValues[${attrCount}]" class="form-control me-2" placeholder="Attribute Value" />
                <button type="button" class="btn btn-danger btn-sm" onclick="removeAttribute(this)">×</button>
            `;
            group.appendChild(div);
        }

        function removeAttribute(btn) {
            btn.parentElement.remove();
        }
    </script>
}
